apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP_NAME}
  namespace: ${PROFILE}
spec:
  selector:
    matchLabels:
      app: ${APP_NAME}
  replicas: 1
  template:
    metadata:
      labels:
        app: ${APP_NAME}
    spec:
      containers:
        - name: ${APP_NAME}
          image: ${REGISTRY_GROUP}/${PROFILE}/${APP_NAME}:${APP_VERSION}
          imagePullPolicy: Always
          ports:
            - containerPort: ${APP_PORT}
          volumeMounts:
            - mountPath: /data/java/logs/
              name: cache-volume
          env:
            - name: redepoly
              value: "${TIME}"
      imagePullSecrets:
        - name: harbor-secret
      volumes:
        - name: cache-volume
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}-service
  namespace: ${PROFILE}
spec:
  ports:
    - port: 80
      targetPort: ${APP_PORT}
      protocol: TCP
  type: NodePort
  selector:
    app: ${APP_NAME}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ${APP_NAME}-ingress
  namespace: ${PROFILE}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.org/websocket-services: "websocket-server-service"
spec:
  tls:
    - secretName: yj2025-secret
      hosts:
        - dev.yj2025.com
  rules:
    - host: dev.yj2025.com
      http:
        paths:
          - path: /
            backend:
              serviceName: ierp-next-service
              servicePort: 80
          - path: /ierp
            backend:
              serviceName: ierp-front-service
              servicePort: 80
          - path: /websocket
            backend:
              serviceName: websocket-server-service
              servicePort: 8066
