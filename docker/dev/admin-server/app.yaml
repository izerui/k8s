apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-server
  namespace: dev
spec:
  selector:
    matchLabels:
      app: admin-server
  replicas: 1
  template:
    metadata:
      labels:
        app: admin-server
    spec:
      containers:
        - name: admin-server
          image: harbor.yj2025.com/dev/admin-server:1.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 33011
              hostPort: 33011
          volumeMounts:
            - mountPath: /data/java/logs/
              name: cache-volume
          env:
            - name: redepoly
              value: "2020-08-06 12:18:04"
      imagePullSecrets:
        - name: harbor-secret
      volumes:
        - name: cache-volume
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: admin-server-service
  namespace: dev
spec:
  ports:
    - port: 80
      targetPort: 33011
      protocol: TCP
  type: ClusterIP
  selector:
    app: admin-server
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: admin-server-ingress
  namespace: dev
  annotations:
#    nginx.ingress.kubernetes.io/auth-type: basic
#    nginx.ingress.kubernetes.io/auth-secret: basic-auth
#    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
    - secretName: yj2025-secret
      hosts:
        - admin-dev.yj2025.com
  rules:
    - host: admin-dev.yj2025.com
      http:
        paths:
          - path: /
            backend:
              serviceName: admin-server-service
              servicePort: 80
